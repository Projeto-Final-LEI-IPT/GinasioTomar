@page
@model AppGCT.Pages.Gestao.Utilizadores.IndexModel
@{

}
@{
    ViewData["Title"] = "Gestão Utilizadores";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
@using Microsoft.AspNetCore.Identity
@using AppGCT.Areas.Identity.Data
@inject UserManager<Utilizador> UserManager
@inject RoleManager<IdentityRole> roleManager

<h1>Gestão Utilizadores</h1>

<p>
    <a class='btn btn-primary btn-sm' asp-area='' asp-page='/Gestao/Utilizadores/Create'>Novo Utilizador</a>
</p>
<form asp-page="./Index" method="get">
   Pesquisa
   <input type="text" name="SearchString" value="@Model.CurrentFilter" />
   <input type="submit" value="Procurar" class="btn btn-primary btn-sm" />
   <a class='btn btn-primary btn-sm' asp-area='' asp-page='/Gestao/Utilizadores/Index'>Limpar</a>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NomeCompletoSort">
                    Nome Completo
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TipoUtilizadorSort">
                    Tipo Utilizador
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NumSocioSort">
                    Nº Sócio
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.EstadoUtilizadorSort">
                    Estado Utilizador
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.ContactoSort">
                    Contacto
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.EmailSort">
                    E-mail
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Users)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => user.Nome)
                </td>
                <td>
                    @foreach (var roleName in await UserManager.GetRolesAsync(user))
                    {
                        <span>@roleName</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => user.NumSocio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => user.StatusDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => user.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => user.Email)
                </td>
                <td>
                    <a class='btn btn-primary btn-sm' asp-area='' asp-page='/Gestao/Utilizadores/Edit' asp-route-id='@user.Id'>Editar</a>
                    <a class='btn btn-primary btn-sm' asp-area='' asp-page='/Gestao/Utilizadores/Details' asp-route-id='@user.Id'>Detalhes</a>
                    @{
                        @if (User.IsInRole("Administrador"))
                        {
                            if (!user.Email.Equals("admin@localhost")) // NÃO MOSTRA BOTÃO APAGAR PARA O USER DE ADMINISTRAÇÃO
                            {
                                <a class='btn btn-danger btn-sm' asp-area='' asp-page='/Gestao/Utilizadores/Delete' asp-route-id='@user.Id'>Apagar</a>
                            }
                        }
                    }

                </td>
            </tr>
        }
    </tbody>
</table>