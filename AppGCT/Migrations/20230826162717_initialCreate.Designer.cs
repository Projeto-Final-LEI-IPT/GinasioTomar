// <auto-generated />
using System;
using AppGCT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppGCT.Migrations
{
    [DbContext(typeof(AppGCTContext))]
    [Migration("20230826162717_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppGCT.Areas.Identity.Data.Utilizador", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAprovacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascim")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoUtilizador")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IdCriacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IdModificacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NumSocio")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleAux")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "005429a6-991b-4294-b0c6-b4bbe45bb656",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "83f55a5b-d535-424e-8216-8976f0cc638f",
                            DataAprovacao = new DateTime(2023, 8, 26, 17, 27, 16, 976, DateTimeKind.Local).AddTicks(5193),
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 16, 976, DateTimeKind.Local).AddTicks(5144),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascim = new DateTime(2023, 8, 26, 17, 27, 16, 976, DateTimeKind.Local).AddTicks(5199),
                            Email = "admin@localhost",
                            EmailConfirmed = true,
                            EstadoUtilizador = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LockoutEnabled = false,
                            Morada = "Ginásio Clube de Tomar",
                            NIF = "999999999",
                            Nome = "Administrador",
                            NormalizedEmail = "ADMIN@LOCALHOST",
                            NormalizedUserName = "ADMIN@LOCALHOST",
                            NumSocio = " ",
                            PasswordHash = "AQAAAAIAAYagAAAAELB6FIPCnPo0alw0taG9XdUy77vOfS9OH/xHR5slzSJbwsbQKgn1CLg9fC0/aBN4xw==",
                            PhoneNumber = "999999999",
                            PhoneNumberConfirmed = false,
                            RoleAux = "Administrador",
                            SecurityStamp = "4ab13e80-bd29-4132-a5d7-ef736e6bcd48",
                            TwoFactorEnabled = false,
                            UserName = "admin@localhost"
                        });
                });

            modelBuilder.Entity("AppGCT.Models.Classe", b =>
                {
                    b.Property<int?>("IdClasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("IdClasse"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstadoClasse")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IdCriacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IdModificacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("NomeClasse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdClasse");

                    b.ToTable("Classe");

                    b.HasData(
                        new
                        {
                            IdClasse = 1,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6050),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstadoClasse = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            NomeClasse = "Aprendizagem 1"
                        },
                        new
                        {
                            IdClasse = 2,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6056),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstadoClasse = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            NomeClasse = "Aprendizagem 2"
                        },
                        new
                        {
                            IdClasse = 3,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6060),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstadoClasse = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            NomeClasse = "Aprendizagem 3"
                        },
                        new
                        {
                            IdClasse = 4,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6063),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstadoClasse = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            NomeClasse = "Acrobática 1"
                        },
                        new
                        {
                            IdClasse = 5,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6079),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstadoClasse = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            NomeClasse = "Acrobática 2"
                        },
                        new
                        {
                            IdClasse = 6,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6088),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstadoClasse = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            NomeClasse = "Acrobática 3"
                        },
                        new
                        {
                            IdClasse = 7,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6092),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstadoClasse = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            NomeClasse = "Trampolins 1"
                        },
                        new
                        {
                            IdClasse = 8,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6096),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstadoClasse = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            NomeClasse = "Trampolins 2"
                        },
                        new
                        {
                            IdClasse = 9,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6099),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstadoClasse = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            NomeClasse = "Ginástica para todos–Júnior"
                        },
                        new
                        {
                            IdClasse = 10,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6134),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstadoClasse = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            NomeClasse = "Ginástica para todos–Universitários"
                        });
                });

            modelBuilder.Entity("AppGCT.Models.Desconto", b =>
                {
                    b.Property<string>("CodDesconto")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescDesconto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EstadoDesconto")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IdCriacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IdModificacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("CodDesconto");

                    b.ToTable("Desconto");

                    b.HasData(
                        new
                        {
                            CodDesconto = "00",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6264),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescDesconto = "Bolsa",
                            EstadoDesconto = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " "
                        },
                        new
                        {
                            CodDesconto = "01",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6297),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescDesconto = "Parentesco(1º familiar)",
                            EstadoDesconto = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " "
                        },
                        new
                        {
                            CodDesconto = "02",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6301),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescDesconto = "Parentesco(2º familiar)",
                            EstadoDesconto = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " "
                        },
                        new
                        {
                            CodDesconto = "03",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6304),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescDesconto = "Parentesco(3º familiar)",
                            EstadoDesconto = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " "
                        });
                });

            modelBuilder.Entity("AppGCT.Models.Epoca", b =>
                {
                    b.Property<int>("IdEpoca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEpoca"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstadoEpoca")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IdCriacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IdModificacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("NomeEpoca")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("IdEpoca");

                    b.ToTable("Epoca");

                    b.HasData(
                        new
                        {
                            IdEpoca = 1,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(5938),
                            DataFim = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EstadoEpoca = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            NomeEpoca = "2023/2024"
                        });
                });

            modelBuilder.Entity("AppGCT.Models.Ginasta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodPostal")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtNascim")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("EmailEE")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("EmailTlmEmerEE")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("EstadoGinasta")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("GrauEmerEE")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IBolsa")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IGrauEE")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IIrmaos")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ISexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IdCriacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IdModificacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Localidade")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("NIFEE")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("NISS")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomeEE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomeEmerEE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomeIrmaos")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumCC")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("NumTlmEmerEE")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("PrefixoTlmEmerEE")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("UtilizadorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numTelemovelEE")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("prefixoTelemEE")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Ginasta");
                });

            modelBuilder.Entity("AppGCT.Models.Inscricao", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("ClasseId")
                        .HasColumnType("int");

                    b.Property<string>("CodDesconto")
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescAlergias")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("DtConsentimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtExamMed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFicFGP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInscricao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EpocaId")
                        .HasColumnType("int");

                    b.Property<int>("GinastaId")
                        .HasColumnType("int");

                    b.Property<string>("IAntiInflam")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IConsentimento")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IExamMed")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IFicFGP")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IFotos")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IIbuprofeno")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ILeituraObrig")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IPagamInscricao")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IParacetamol")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ISeguro")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ISocGinasta")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IdCriacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IdFGP")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("IdModificacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int?>("IdadeAgosto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.HasIndex("CodDesconto");

                    b.HasIndex("EpocaId");

                    b.HasIndex("GinastaId");

                    b.ToTable("Inscricao");
                });

            modelBuilder.Entity("AppGCT.Models.MetodoPagamento", b =>
                {
                    b.Property<string>("CodMetodo")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescMetodo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EstadoMetodo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IdCriacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IdModificacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal?>("ValorDesconto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CodMetodo");

                    b.ToTable("MetodoPagamento");

                    b.HasData(
                        new
                        {
                            CodMetodo = "00",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6205),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescMetodo = "Numerário",
                            EstadoMetodo = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            ValorDesconto = 0m
                        },
                        new
                        {
                            CodMetodo = "01",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6218),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescMetodo = "Transferência Bancária",
                            EstadoMetodo = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            ValorDesconto = 1m
                        },
                        new
                        {
                            CodMetodo = "02",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6222),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescMetodo = "Terminal Pagamento Automático(TPA)",
                            EstadoMetodo = "A",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            ValorDesconto = 0m
                        });
                });

            modelBuilder.Entity("AppGCT.Models.Movimento", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("AtletaMovimentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesRubrica")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("DtMovimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCriacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IdModificacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal?>("MSaldo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MetodoPagamentoId")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("NumFatura")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("NumNotaCredito")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RubricaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("UtilizadorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("ValorDesconto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorMovimento")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AtletaMovimentoId");

                    b.HasIndex("MetodoPagamentoId");

                    b.HasIndex("RubricaId");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Movimento");
                });

            modelBuilder.Entity("AppGCT.Models.PlanoMensalidade", b =>
                {
                    b.Property<int>("IdPlanoM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlanoM"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataMensalidade")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EpocaId")
                        .HasColumnType("int");

                    b.Property<int>("GinastaId")
                        .HasColumnType("int");

                    b.Property<string>("ILancado")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IdCriacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IdModificacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int?>("IdMovimento")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorMensalidade")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorMensalidadeLanc")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPlanoM");

                    b.HasIndex("EpocaId");

                    b.HasIndex("GinastaId");

                    b.ToTable("PlanoMensalidade");
                });

            modelBuilder.Entity("AppGCT.Models.Rubrica", b =>
                {
                    b.Property<string>("CodRubrica")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int?>("ClasseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescontoId")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("DescricaoRubrica")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EstadoRubrica")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Horario")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("HorasSemanais")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("IPagInscricao")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IPrecario")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IVlrUnit")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("IdCriacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("IdModificacao")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("LocalTreino")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrdemPrecario")
                        .HasColumnType("int");

                    b.Property<string>("TipoMovimento")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TipoRubrica")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal?>("ValorUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CodRubrica");

                    b.HasIndex("ClasseId");

                    b.HasIndex("DescontoId");

                    b.ToTable("Rubrica");

                    b.HasData(
                        new
                        {
                            CodRubrica = "001",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6344),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Inscrição",
                            EstadoRubrica = "A",
                            Horario = "",
                            HorasSemanais = "",
                            IPagInscricao = "S",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "",
                            OrdemPrecario = 1,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 15m
                        },
                        new
                        {
                            CodRubrica = "002",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6353),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Filiação FGP",
                            EstadoRubrica = "A",
                            Horario = "",
                            HorasSemanais = "",
                            IPagInscricao = "S",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "",
                            OrdemPrecario = 2,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 10m
                        },
                        new
                        {
                            CodRubrica = "003",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6359),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Seguro",
                            EstadoRubrica = "A",
                            Horario = "",
                            HorasSemanais = "",
                            IPagInscricao = "S",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "",
                            OrdemPrecario = 3,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 30m
                        },
                        new
                        {
                            CodRubrica = "004",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6366),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Quota Sócio",
                            EstadoRubrica = "A",
                            Horario = "",
                            HorasSemanais = "",
                            IPagInscricao = "N",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "",
                            OrdemPrecario = 4,
                            TipoMovimento = "D",
                            TipoRubrica = "S",
                            ValorUnitario = 15m
                        },
                        new
                        {
                            CodRubrica = "005",
                            ClasseId = 1,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6371),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Mens. Aprendizagem 1",
                            EstadoRubrica = "A",
                            Horario = "2ª e 5ª 17h45 às 18h30 (2x semana)",
                            HorasSemanais = "1h30m",
                            IPagInscricao = "N",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            OrdemPrecario = 1,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 27m
                        },
                        new
                        {
                            CodRubrica = "006",
                            ClasseId = 2,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6376),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Mens. Aprendizagem 2",
                            EstadoRubrica = "A",
                            Horario = "2ª e 5ª 18h15 às 19h30  (2x semana)",
                            HorasSemanais = "2h30m",
                            IPagInscricao = "N",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            OrdemPrecario = 2,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 30m
                        },
                        new
                        {
                            CodRubrica = "007",
                            ClasseId = 3,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6381),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Mens. Aprendizagem 3",
                            EstadoRubrica = "A",
                            Horario = "3ª e 6ª 17h45 às 19h15  (2x semana)",
                            HorasSemanais = "3h00m",
                            IPagInscricao = "N",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            OrdemPrecario = 3,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 32m
                        },
                        new
                        {
                            CodRubrica = "008",
                            ClasseId = 4,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6388),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Mens. Acrobática 1",
                            EstadoRubrica = "A",
                            Horario = "3ª, 4ª 17h45 às 20h00 e 6ª 17h45 às 20h15 (3x semana)",
                            HorasSemanais = "7h00m",
                            IPagInscricao = "N",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            OrdemPrecario = 4,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 40m
                        },
                        new
                        {
                            CodRubrica = "009",
                            ClasseId = 5,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6393),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Mens. Acrobática 2",
                            EstadoRubrica = "A",
                            Horario = "3ª, 4ª e 6ª 17h45 às 20h45  (3x semana)",
                            HorasSemanais = "9h00m",
                            IPagInscricao = "N",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            OrdemPrecario = 5,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 45m
                        },
                        new
                        {
                            CodRubrica = "010",
                            ClasseId = 6,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6398),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Mens. Acrobática 3",
                            EstadoRubrica = "A",
                            Horario = "2ª, 3ª, 5ª 18h00 às 21h00 e Sábado 10h00 às 13h00  (4x semana)",
                            HorasSemanais = "12h00m",
                            IPagInscricao = "N",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            OrdemPrecario = 6,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 52m
                        },
                        new
                        {
                            CodRubrica = "011",
                            ClasseId = 7,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6403),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Mens. Trampolins 1",
                            EstadoRubrica = "A",
                            Horario = "2ª, 5ª 18h00 às 19h45 e Sábado 11h00 às 13h00  (3x semana)",
                            HorasSemanais = "5h30m",
                            IPagInscricao = "N",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            OrdemPrecario = 7,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 36m
                        },
                        new
                        {
                            CodRubrica = "012",
                            ClasseId = 8,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6414),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Mens. Trampolins 2",
                            EstadoRubrica = "A",
                            Horario = "2ª 18h30 às 21h00 e 3ª, 4ª e 6ª 18h00 às 20h15  (4x semana)",
                            HorasSemanais = "9h15m",
                            IPagInscricao = "N",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            OrdemPrecario = 8,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 45m
                        },
                        new
                        {
                            CodRubrica = "013",
                            ClasseId = 9,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6458),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Mens. GPT – Júnior",
                            EstadoRubrica = "A",
                            Horario = "4ª 18h00 às 20h30 e Sábados 10h30 às 13h00  (2x semana)",
                            HorasSemanais = "5h00m",
                            IPagInscricao = "N",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            OrdemPrecario = 9,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 35m
                        },
                        new
                        {
                            CodRubrica = "014",
                            ClasseId = 10,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6464),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Mens. GPT – Universitários",
                            EstadoRubrica = "A",
                            Horario = "Sábado 10h00 às 13h00 (1x semana)",
                            HorasSemanais = "3h00m",
                            IPagInscricao = "N",
                            IPrecario = "S",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            OrdemPrecario = 10,
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 18m
                        },
                        new
                        {
                            CodRubrica = "015",
                            ClasseId = 1,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6469),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "00",
                            DescricaoRubrica = "Mens. APZ 1 - Bolsa",
                            EstadoRubrica = "A",
                            Horario = "2ª e 5ª 17h45 às 18h30 (2x semana)",
                            HorasSemanais = "1h30m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "016",
                            ClasseId = 2,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6475),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "00",
                            DescricaoRubrica = "Mens. APZ 2 - Bolsa",
                            EstadoRubrica = "A",
                            Horario = "2ª e 5ª 18h15 às 19h30  (2x semana)",
                            HorasSemanais = "2h30m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "017",
                            ClasseId = 3,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6480),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "00",
                            DescricaoRubrica = "Mens. APZ 3 - Bolsa",
                            EstadoRubrica = "A",
                            Horario = "3ª e 6ª 17h45 às 19h15  (2x semana)",
                            HorasSemanais = "3h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "018",
                            ClasseId = 4,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6488),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "00",
                            DescricaoRubrica = "Mens. Acro 1 - Bolsa",
                            EstadoRubrica = "A",
                            Horario = "3ª, 4ª 17h45 às 20h00 e 6ª 17h45 às 20h15 (3x semana)",
                            HorasSemanais = "7h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "019",
                            ClasseId = 5,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6493),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "00",
                            DescricaoRubrica = "Mens. Acro 2 - Bolsa",
                            EstadoRubrica = "A",
                            Horario = "3ª, 4ª e 6ª 17h45 às 20h45  (3x semana)",
                            HorasSemanais = "9h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "020",
                            ClasseId = 6,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6499),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "00",
                            DescricaoRubrica = "Mens. Acro 3 - Bolsa",
                            EstadoRubrica = "A",
                            Horario = "2ª, 3ª, 5ª 18h00 às 21h00 e Sábado 10h00 às 13h00  (4x semana)",
                            HorasSemanais = "12h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "021",
                            ClasseId = 7,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6504),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "00",
                            DescricaoRubrica = "Mens. TRAMP 1 - Bolsa",
                            EstadoRubrica = "A",
                            Horario = "2ª, 5ª 18h00 às 19h45 e Sábado 11h00 às 13h00  (3x semana)",
                            HorasSemanais = "5h30m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "022",
                            ClasseId = 8,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6509),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "00",
                            DescricaoRubrica = "Mens. TRAMP 2 - Bolsa",
                            EstadoRubrica = "A",
                            Horario = "2ª 18h30 às 21h00 e 3ª, 4ª e 6ª 18h00 às 20h15  (4x semana)",
                            HorasSemanais = "9h15m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "023",
                            ClasseId = 9,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6518),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "00",
                            DescricaoRubrica = "Mens. GPT – Júnior - Bolsa",
                            EstadoRubrica = "A",
                            Horario = "4ª 18h00 às 20h30 e Sábados 10h30 às 13h00  (2x semana)",
                            HorasSemanais = "5h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "024",
                            ClasseId = 10,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6523),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "00",
                            DescricaoRubrica = "Mens. GPT – Univ. - Bolsa",
                            EstadoRubrica = "A",
                            Horario = "Sábado 10h00 às 13h00 (1x semana)",
                            HorasSemanais = "3h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "025",
                            ClasseId = 1,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6529),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "01",
                            DescricaoRubrica = "Mens. APZ 1 - Par.(1º)",
                            EstadoRubrica = "A",
                            Horario = "2ª e 5ª 17h45 às 18h30 (2x semana)",
                            HorasSemanais = "1h30m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 24.3m
                        },
                        new
                        {
                            CodRubrica = "026",
                            ClasseId = 2,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6547),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "01",
                            DescricaoRubrica = "Mens. APZ 2 - Par.(1º)",
                            EstadoRubrica = "A",
                            Horario = "2ª e 5ª 18h15 às 19h30  (2x semana)",
                            HorasSemanais = "2h30m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 27m
                        },
                        new
                        {
                            CodRubrica = "027",
                            ClasseId = 3,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6555),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "01",
                            DescricaoRubrica = "Mens. APZ 3 - Par.(1º)",
                            EstadoRubrica = "A",
                            Horario = "3ª e 6ª 17h45 às 19h15  (2x semana)",
                            HorasSemanais = "3h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 28.8m
                        },
                        new
                        {
                            CodRubrica = "028",
                            ClasseId = 4,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6562),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "01",
                            DescricaoRubrica = "Mens. Acro 1 - Par.(1º)",
                            EstadoRubrica = "A",
                            Horario = "3ª, 4ª 17h45 às 20h00 e 6ª 17h45 às 20h15 (3x semana)",
                            HorasSemanais = "7h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 36m
                        },
                        new
                        {
                            CodRubrica = "029",
                            ClasseId = 5,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6568),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "01",
                            DescricaoRubrica = "Mens. Acro 2 - Par.(1º)",
                            EstadoRubrica = "A",
                            Horario = "3ª, 4ª e 6ª 17h45 às 20h45  (3x semana)",
                            HorasSemanais = "9h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 40.5m
                        },
                        new
                        {
                            CodRubrica = "030",
                            ClasseId = 6,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6575),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "01",
                            DescricaoRubrica = "Mens. Acro 3 - Par.(1º)",
                            EstadoRubrica = "A",
                            Horario = "2ª, 3ª, 5ª 18h00 às 21h00 e Sábado 10h00 às 13h00  (4x semana)",
                            HorasSemanais = "12h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 46.8m
                        },
                        new
                        {
                            CodRubrica = "031",
                            ClasseId = 7,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6582),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "01",
                            DescricaoRubrica = "Mens. TRAMP 1 - Par.(1º)",
                            EstadoRubrica = "A",
                            Horario = "2ª, 5ª 18h00 às 19h45 e Sábado 11h00 às 13h00  (3x semana)",
                            HorasSemanais = "5h30m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 32.4m
                        },
                        new
                        {
                            CodRubrica = "032",
                            ClasseId = 8,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6588),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "01",
                            DescricaoRubrica = "Mens. TRAMP 2 - Par.(1º)",
                            EstadoRubrica = "A",
                            Horario = "2ª 18h30 às 21h00 e 3ª, 4ª e 6ª 18h00 às 20h15  (4x semana)",
                            HorasSemanais = "9h15m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 40.5m
                        },
                        new
                        {
                            CodRubrica = "033",
                            ClasseId = 9,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6597),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "01",
                            DescricaoRubrica = "Mens. GPT – Júnior - Par.(1º)",
                            EstadoRubrica = "A",
                            Horario = "4ª 18h00 às 20h30 e Sábados 10h30 às 13h00  (2x semana)",
                            HorasSemanais = "5h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 31.5m
                        },
                        new
                        {
                            CodRubrica = "034",
                            ClasseId = 10,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6602),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "01",
                            DescricaoRubrica = "Mens. GPT – Univ. - Par.(1º)",
                            EstadoRubrica = "A",
                            Horario = "Sábado 10h00 às 13h00 (1x semana)",
                            HorasSemanais = "3h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 16.2m
                        },
                        new
                        {
                            CodRubrica = "035",
                            ClasseId = 1,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6607),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "02",
                            DescricaoRubrica = "Mens. APZ 1 - Par.(2º)",
                            EstadoRubrica = "A",
                            Horario = "2ª e 5ª 17h45 às 18h30 (2x semana)",
                            HorasSemanais = "1h30m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 22.95m
                        },
                        new
                        {
                            CodRubrica = "036",
                            ClasseId = 2,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6613),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "02",
                            DescricaoRubrica = "Mens. APZ 2 - Par.(2º)",
                            EstadoRubrica = "A",
                            Horario = "2ª e 5ª 18h15 às 19h30  (2x semana)",
                            HorasSemanais = "2h30m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 25.5m
                        },
                        new
                        {
                            CodRubrica = "037",
                            ClasseId = 3,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6618),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "02",
                            DescricaoRubrica = "Mens. APZ 3 - Par.(2º)",
                            EstadoRubrica = "A",
                            Horario = "3ª e 6ª 17h45 às 19h15  (2x semana)",
                            HorasSemanais = "3h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 27.2m
                        },
                        new
                        {
                            CodRubrica = "038",
                            ClasseId = 4,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6624),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "02",
                            DescricaoRubrica = "Mens. Acro 1 - Par.(2º)",
                            EstadoRubrica = "A",
                            Horario = "3ª, 4ª 17h45 às 20h00 e 6ª 17h45 às 20h15 (3x semana)",
                            HorasSemanais = "7h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 34m
                        },
                        new
                        {
                            CodRubrica = "039",
                            ClasseId = 5,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6629),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "02",
                            DescricaoRubrica = "Mens. Acro 2 - Par.(2º)",
                            EstadoRubrica = "A",
                            Horario = "3ª, 4ª e 6ª 17h45 às 20h45  (3x semana)",
                            HorasSemanais = "9h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 38.25m
                        },
                        new
                        {
                            CodRubrica = "040",
                            ClasseId = 6,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6634),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "02",
                            DescricaoRubrica = "Mens. Acro 3 - Par.(2º)",
                            EstadoRubrica = "A",
                            Horario = "2ª, 3ª, 5ª 18h00 às 21h00 e Sábado 10h00 às 13h00  (4x semana)",
                            HorasSemanais = "12h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 44.2m
                        },
                        new
                        {
                            CodRubrica = "041",
                            ClasseId = 7,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6640),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "02",
                            DescricaoRubrica = "Mens. TRAMP 1 - Par.(2º)",
                            EstadoRubrica = "A",
                            Horario = "2ª, 5ª 18h00 às 19h45 e Sábado 11h00 às 13h00  (3x semana)",
                            HorasSemanais = "5h30m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 30.6m
                        },
                        new
                        {
                            CodRubrica = "042",
                            ClasseId = 8,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6645),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "02",
                            DescricaoRubrica = "Mens. TRAMP 2 - Par.(2º)",
                            EstadoRubrica = "A",
                            Horario = "2ª 18h30 às 21h00 e 3ª, 4ª e 6ª 18h00 às 20h15  (4x semana)",
                            HorasSemanais = "9h15m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 38.25m
                        },
                        new
                        {
                            CodRubrica = "043",
                            ClasseId = 9,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6652),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "02",
                            DescricaoRubrica = "Mens. GPT – Júnior - Par.(2º)",
                            EstadoRubrica = "A",
                            Horario = "4ª 18h00 às 20h30 e Sábados 10h30 às 13h00  (2x semana)",
                            HorasSemanais = "5h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 29.75m
                        },
                        new
                        {
                            CodRubrica = "044",
                            ClasseId = 10,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6657),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "02",
                            DescricaoRubrica = "Mens. GPT – Univ. - Par.(2º)",
                            EstadoRubrica = "A",
                            Horario = "Sábado 10h00 às 13h00 (1x semana)",
                            HorasSemanais = "3h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 15.3m
                        },
                        new
                        {
                            CodRubrica = "045",
                            ClasseId = 1,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6662),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "03",
                            DescricaoRubrica = "Mens. APZ 1 - Par.(3º)",
                            EstadoRubrica = "A",
                            Horario = "2ª e 5ª 17h45 às 18h30 (2x semana)",
                            HorasSemanais = "1h30m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 21.6m
                        },
                        new
                        {
                            CodRubrica = "046",
                            ClasseId = 2,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6671),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "03",
                            DescricaoRubrica = "Mens. APZ 2 - Par.(3º)",
                            EstadoRubrica = "A",
                            Horario = "2ª e 5ª 18h15 às 19h30  (2x semana)",
                            HorasSemanais = "2h30m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 24m
                        },
                        new
                        {
                            CodRubrica = "047",
                            ClasseId = 3,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6677),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "03",
                            DescricaoRubrica = "Mens. APZ 3 - Par.(3º)",
                            EstadoRubrica = "A",
                            Horario = "3ª e 6ª 17h45 às 19h15  (2x semana)",
                            HorasSemanais = "3h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 25.6m
                        },
                        new
                        {
                            CodRubrica = "048",
                            ClasseId = 4,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6683),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "03",
                            DescricaoRubrica = "Mens. Acro 1 - Par.(3º)",
                            EstadoRubrica = "A",
                            Horario = "3ª, 4ª 17h45 às 20h00 e 6ª 17h45 às 20h15 (3x semana)",
                            HorasSemanais = "7h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 32m
                        },
                        new
                        {
                            CodRubrica = "049",
                            ClasseId = 5,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6688),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "03",
                            DescricaoRubrica = "Mens. Acro 2 - Par.(3º)",
                            EstadoRubrica = "A",
                            Horario = "3ª, 4ª e 6ª 17h45 às 20h45  (3x semana)",
                            HorasSemanais = "9h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 36m
                        },
                        new
                        {
                            CodRubrica = "050",
                            ClasseId = 6,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6694),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "03",
                            DescricaoRubrica = "Mens. Acro 3 - Par.(3º)",
                            EstadoRubrica = "A",
                            Horario = "2ª, 3ª, 5ª 18h00 às 21h00 e Sábado 10h00 às 13h00  (4x semana)",
                            HorasSemanais = "12h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Stª Iria",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 41.6m
                        },
                        new
                        {
                            CodRubrica = "051",
                            ClasseId = 7,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6699),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "03",
                            DescricaoRubrica = "Mens. TRAMP 1 - Par.(3º)",
                            EstadoRubrica = "A",
                            Horario = "2ª, 5ª 18h00 às 19h45 e Sábado 11h00 às 13h00  (3x semana)",
                            HorasSemanais = "5h30m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 28.8m
                        },
                        new
                        {
                            CodRubrica = "052",
                            ClasseId = 8,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6704),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "03",
                            DescricaoRubrica = "Mens. TRAMP 2 - Par.(3º)",
                            EstadoRubrica = "A",
                            Horario = "2ª 18h30 às 21h00 e 3ª, 4ª e 6ª 18h00 às 20h15  (4x semana)",
                            HorasSemanais = "9h15m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 36m
                        },
                        new
                        {
                            CodRubrica = "053",
                            ClasseId = 9,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6711),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "03",
                            DescricaoRubrica = "Mens. GPT – Júnior - Par.(3º)",
                            EstadoRubrica = "A",
                            Horario = "4ª 18h00 às 20h30 e Sábados 10h30 às 13h00  (2x semana)",
                            HorasSemanais = "5h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 28m
                        },
                        new
                        {
                            CodRubrica = "054",
                            ClasseId = 10,
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6716),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescontoId = "03",
                            DescricaoRubrica = "Mens. GPT – Univ. - Par.(3º)",
                            EstadoRubrica = "A",
                            Horario = "Sábado 10h00 às 13h00 (1x semana)",
                            HorasSemanais = "3h00m",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "S",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "Gualdim Pais",
                            TipoMovimento = "D",
                            TipoRubrica = "G",
                            ValorUnitario = 14.4m
                        },
                        new
                        {
                            CodRubrica = "055",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6722),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Pagamento",
                            EstadoRubrica = "A",
                            Horario = "",
                            HorasSemanais = "",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "N",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "",
                            TipoMovimento = "C",
                            TipoRubrica = "P",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "056",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6727),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Devolução",
                            EstadoRubrica = "A",
                            Horario = "",
                            HorasSemanais = "",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "N",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "",
                            TipoMovimento = "C",
                            TipoRubrica = "D",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "057",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6731),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Regularização Débito",
                            EstadoRubrica = "A",
                            Horario = "",
                            HorasSemanais = "",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "N",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "",
                            TipoMovimento = "D",
                            TipoRubrica = "R",
                            ValorUnitario = 0m
                        },
                        new
                        {
                            CodRubrica = "058",
                            DataCriacao = new DateTime(2023, 8, 26, 17, 27, 17, 66, DateTimeKind.Local).AddTicks(6736),
                            DataModificacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DescricaoRubrica = "Regularização Crédito",
                            EstadoRubrica = "A",
                            Horario = "",
                            HorasSemanais = "",
                            IPagInscricao = "N",
                            IPrecario = "N",
                            IVlrUnit = "N",
                            IdCriacao = "SEED",
                            IdModificacao = " ",
                            LocalTreino = "",
                            TipoMovimento = "C",
                            TipoRubrica = "R",
                            ValorUnitario = 0m
                        });
                });

            modelBuilder.Entity("AppGCT.Models.Saldo", b =>
                {
                    b.Property<string>("IdSocio")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal?>("MSaldo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdSocio");

                    b.ToTable("Saldo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "36ca485c-b28f-458b-b439-bb76f41531f3",
                            Name = "Administrador",
                            NormalizedName = "ADMINISTRADOR"
                        },
                        new
                        {
                            Id = "e4a8bacd-8b08-4e36-824b-6dcbc8613479",
                            Name = "Ginásio",
                            NormalizedName = "GINÁSIO"
                        },
                        new
                        {
                            Id = "a0c4da20-1c85-4325-bbf7-eff45c0e9301",
                            Name = "Sócio",
                            NormalizedName = "SÓCIO"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "005429a6-991b-4294-b0c6-b4bbe45bb656",
                            RoleId = "36ca485c-b28f-458b-b439-bb76f41531f3"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AppGCT.Models.Ginasta", b =>
                {
                    b.HasOne("AppGCT.Areas.Identity.Data.Utilizador", "Socio")
                        .WithMany("Ginasta")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("AppGCT.Models.Inscricao", b =>
                {
                    b.HasOne("AppGCT.Models.Classe", "Class")
                        .WithMany("Inscricoes")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGCT.Models.Desconto", "Descont")
                        .WithMany("Inscricoes")
                        .HasForeignKey("CodDesconto");

                    b.HasOne("AppGCT.Models.Epoca", "Periodo")
                        .WithMany("Inscricoes")
                        .HasForeignKey("EpocaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGCT.Models.Ginasta", "Atleta")
                        .WithMany("Inscricoes")
                        .HasForeignKey("GinastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atleta");

                    b.Navigation("Class");

                    b.Navigation("Descont");

                    b.Navigation("Periodo");
                });

            modelBuilder.Entity("AppGCT.Models.Movimento", b =>
                {
                    b.HasOne("AppGCT.Models.Ginasta", "Atleta")
                        .WithMany("Movimentos")
                        .HasForeignKey("AtletaMovimentoId");

                    b.HasOne("AppGCT.Models.MetodoPagamento", "FormaPagamento")
                        .WithMany("Movimentos")
                        .HasForeignKey("MetodoPagamentoId");

                    b.HasOne("AppGCT.Models.Rubrica", "TipoDespesa")
                        .WithMany("Movimentos")
                        .HasForeignKey("RubricaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGCT.Areas.Identity.Data.Utilizador", "Socio")
                        .WithMany("Movimentos")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atleta");

                    b.Navigation("FormaPagamento");

                    b.Navigation("Socio");

                    b.Navigation("TipoDespesa");
                });

            modelBuilder.Entity("AppGCT.Models.PlanoMensalidade", b =>
                {
                    b.HasOne("AppGCT.Models.Epoca", "Epoca")
                        .WithMany("Planos")
                        .HasForeignKey("EpocaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGCT.Models.Ginasta", "Aluno")
                        .WithMany("Planos")
                        .HasForeignKey("GinastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Epoca");
                });

            modelBuilder.Entity("AppGCT.Models.Rubrica", b =>
                {
                    b.HasOne("AppGCT.Models.Classe", "Modalidade")
                        .WithMany("Rubricas")
                        .HasForeignKey("ClasseId");

                    b.HasOne("AppGCT.Models.Desconto", "Discount")
                        .WithMany("Rubricas")
                        .HasForeignKey("DescontoId");

                    b.Navigation("Discount");

                    b.Navigation("Modalidade");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AppGCT.Areas.Identity.Data.Utilizador", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AppGCT.Areas.Identity.Data.Utilizador", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGCT.Areas.Identity.Data.Utilizador", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AppGCT.Areas.Identity.Data.Utilizador", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGCT.Areas.Identity.Data.Utilizador", b =>
                {
                    b.Navigation("Ginasta");

                    b.Navigation("Movimentos");
                });

            modelBuilder.Entity("AppGCT.Models.Classe", b =>
                {
                    b.Navigation("Inscricoes");

                    b.Navigation("Rubricas");
                });

            modelBuilder.Entity("AppGCT.Models.Desconto", b =>
                {
                    b.Navigation("Inscricoes");

                    b.Navigation("Rubricas");
                });

            modelBuilder.Entity("AppGCT.Models.Epoca", b =>
                {
                    b.Navigation("Inscricoes");

                    b.Navigation("Planos");
                });

            modelBuilder.Entity("AppGCT.Models.Ginasta", b =>
                {
                    b.Navigation("Inscricoes");

                    b.Navigation("Movimentos");

                    b.Navigation("Planos");
                });

            modelBuilder.Entity("AppGCT.Models.MetodoPagamento", b =>
                {
                    b.Navigation("Movimentos");
                });

            modelBuilder.Entity("AppGCT.Models.Rubrica", b =>
                {
                    b.Navigation("Movimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
